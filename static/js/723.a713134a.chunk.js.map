{"version":3,"file":"static/js/723.a713134a.chunk.js","mappings":"uOAAaA,EAAS,CACpBC,mBAAoB,CAClB,8BAA+B,CAC7BC,MAAO,OACPC,OAAQ,QACRC,WAAY,SAEd,+BAAgC,CAC9BF,MAAO,OACPC,OAAQ,QACRC,WAAY,UAGhBC,gBAAiB,CACfC,QAAS,OACTC,eAAgB,QAChBH,WAAY,SACZF,MAAO,OACPM,EAAG,OACHC,GAAI,OACJC,QAAS,oBAEXC,mBAAoB,CAClBT,MAAO,OACPU,OAAQ,WAEVC,iBAAkB,CAChBP,QAAS,OACTQ,cAAe,SACfV,WAAY,SACZF,MAAO,QAETa,eAAgB,CACdC,SAAU,QAEZC,cAAe,CACbX,QAAS,OACTJ,MAAO,OACPM,EAAG,S,oECzBMU,EAAuC,SAAHC,GAG1C,IAFLC,EAAYD,EAAZC,aACAC,EAAYF,EAAZE,aAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAgBC,EAAAA,EAAAA,GAAc,sBAO9BC,GAAcC,EAAAA,EAAAA,KAClB,SAACC,GAAsC,OAAKA,EAAYC,MAAMH,WAAW,IAEvEI,EAAgB,GAWpB,OAHAA,GANEA,EADEJ,EAAYK,MAAMC,SAAS,WAAQN,EAAYK,MAAMC,SAAS,UAChDN,EAAYK,MAAME,MAAM,GAAI,GAAK,SACxCP,EAAYK,MAAMC,SAAS,UACpBN,EAAYK,MAAQ,SAEpBL,EAAYK,OAGdG,OAAO,GAAGC,cAAgBL,EAAcG,MAAM,IAG5DG,EAAAA,EAAAA,MAACC,EAAAA,GAAM,CACLC,OAAQd,EAAgB,MAAQ,OAChCe,KAAMrB,EACNsB,QAASrB,EACTsB,GAAI3C,EAAOC,mBAAmB2C,SAAA,EAE9BN,EAAAA,EAAAA,MAACO,EAAAA,EAAG,CAACF,GAAI3C,EAAOK,gBAAgBuC,SAAA,EAC9BE,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRJ,GAAI3C,EAAOW,mBACXqC,UAAU,MACVC,MAAOC,EACPC,IAAI,QACJC,QAjCiB,WACvB9B,GAAS+B,EAAAA,EAAAA,OACT/B,GAASgC,EAAAA,EAAAA,OACTjC,IACAG,EAAS,GAAD+B,OAAIC,EAAAA,EAAOC,KAAKC,KAAI,KAAAH,OAAIC,EAAAA,EAAOC,KAAKE,UAC9C,KA8BMb,EAAAA,EAAAA,KAACD,EAAAA,EAAG,CAACF,GAAI3C,EAAOa,iBAAiB+B,UAC/BN,EAAAA,EAAAA,MAACsB,EAAAA,EAAU,CAACjB,GAAI3C,EAAOe,eAAe6B,SAAA,CACnChB,EAAYiC,IAAI,IAAE7B,WAIzBc,EAAAA,EAAAA,KAACD,EAAAA,EAAG,CAACF,GAAI3C,EAAOiB,cAAc2B,UAC5BE,EAAAA,EAAAA,KAACgB,EAAAA,SAAQ,CAACC,SAAU,KAAKnB,UACvBE,EAAAA,EAAAA,KAACkB,EAAAA,GAAM,UAKjB,EChDA,EAjBiB,WACf,IAAAC,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhD7C,EAAY+C,EAAA,GAAEE,EAAeF,EAAA,GASpC,OAJAG,EAAAA,EAAAA,YAAU,WACRD,GAAgB,EAClB,GAAG,KAGDvB,EAAAA,EAAAA,KAAAyB,EAAAA,SAAA,CAAA3B,UACEE,EAAAA,EAAAA,KAAC5B,EAAY,CAACE,aAAcA,EAAcC,aAVzB,WACnBgD,GAAgB,SAACG,GAAI,OAAMA,CAAI,GACjC,KAWF,C","sources":["pages/DatePage/components/EventsLayout/EventsLayout.styled.ts","pages/DatePage/components/EventsLayout/EventsLayout.tsx","pages/DatePage/DatePage.tsx"],"sourcesContent":["export const styles = {\r\n  editEventContainer: {\r\n    \"& .MuiDrawer-paperAnchorTop\": {\r\n      width: \"100%\",\r\n      height: \"100vh\",\r\n      alignItems: \"start\",\r\n    },\r\n    \"& .MuiDrawer-paperAnchorLeft\": {\r\n      width: \"100%\",\r\n      height: \"100vh\",\r\n      alignItems: \"start\",\r\n    },\r\n  },\r\n  editEventHeader: {\r\n    display: \"flex\",\r\n    justifyContent: \"start\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    p: \"15px\",\r\n    mb: \"15px\",\r\n    bgcolor: \"color.greenLight\",\r\n  },\r\n  editEventIconClose: {\r\n    width: \"30px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  editEventContant: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  editEventTitle: {\r\n    fontSize: \"2rem\",\r\n  },\r\n  editEventBody: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    p: \"30px\",\r\n  },\r\n};\r\n","import React, { FC, Suspense } from \"react\";\r\nimport { Box, CardMedia, Drawer, Typography } from \"@mui/material\";\r\nimport { styles } from \"./EventsLayout.styled\";\r\nimport { IEventsLayoutProps } from \"./EventsLayoutTypes\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { clearEvent, clearSpecificEvent } from \"store/events/eventsActions\";\r\nimport close from \"assets/images/png/close.png\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { EditEventState } from \"store/events/eventsTypes\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { routes } from \"config/routes\";\r\n\r\nexport const EventsLayout: FC<IEventsLayoutProps> = ({\r\n  isDrawerOpen,\r\n  toggleDrawer,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const isLargeScreen = useMediaQuery(\"(min-width: 768px)\");\r\n  const handleClearEvent = () => {\r\n    dispatch(clearEvent());\r\n    dispatch(clearSpecificEvent());\r\n    toggleDrawer();\r\n    navigate(`${routes.home.root}/${routes.home.calendar}`);\r\n  };\r\n  const specificDay = useSelector(\r\n    (rootReducer: { event: EditEventState }) => rootReducer.event.specificDay,\r\n  );\r\n  let modifiedMonth = \"\";\r\n  if (specificDay.month.endsWith(\"ь\") || specificDay.month.endsWith(\"й\")) {\r\n    modifiedMonth = specificDay.month.slice(0, -1) + \"я\";\r\n  } else if (specificDay.month.endsWith(\"т\")) {\r\n    modifiedMonth = specificDay.month + \"а\";\r\n  } else {\r\n    modifiedMonth = specificDay.month;\r\n  }\r\n  modifiedMonth =\r\n    modifiedMonth.charAt(0).toLowerCase() + modifiedMonth.slice(1);\r\n\r\n  return (\r\n    <Drawer\r\n      anchor={isLargeScreen ? \"top\" : \"left\"}\r\n      open={isDrawerOpen}\r\n      onClose={toggleDrawer}\r\n      sx={styles.editEventContainer}\r\n    >\r\n      <Box sx={styles.editEventHeader}>\r\n        <CardMedia\r\n          sx={styles.editEventIconClose}\r\n          component=\"img\"\r\n          image={close}\r\n          alt=\"Close\"\r\n          onClick={handleClearEvent}\r\n        />\r\n        <Box sx={styles.editEventContant}>\r\n          <Typography sx={styles.editEventTitle}>\r\n            {specificDay.day} {modifiedMonth}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n      <Box sx={styles.editEventBody}>\r\n        <Suspense fallback={null}>\r\n          <Outlet />\r\n        </Suspense>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { EventsLayout } from \"./components/EventsLayout/EventsLayout\";\r\n\r\nconst DatePage = () => {\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const toggleDrawer = () => {\r\n    setIsDrawerOpen((prev) => !prev);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsDrawerOpen(true);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <EventsLayout isDrawerOpen={isDrawerOpen} toggleDrawer={toggleDrawer} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DatePage;\r\n"],"names":["styles","editEventContainer","width","height","alignItems","editEventHeader","display","justifyContent","p","mb","bgcolor","editEventIconClose","cursor","editEventContant","flexDirection","editEventTitle","fontSize","editEventBody","EventsLayout","_ref","isDrawerOpen","toggleDrawer","dispatch","useDispatch","navigate","useNavigate","isLargeScreen","useMediaQuery","specificDay","useSelector","rootReducer","event","modifiedMonth","month","endsWith","slice","charAt","toLowerCase","_jsxs","Drawer","anchor","open","onClose","sx","children","Box","_jsx","CardMedia","component","image","close","alt","onClick","clearEvent","clearSpecificEvent","concat","routes","home","root","calendar","Typography","day","Suspense","fallback","Outlet","_useState","useState","_useState2","_slicedToArray","setIsDrawerOpen","useEffect","_Fragment","prev"],"sourceRoot":""}