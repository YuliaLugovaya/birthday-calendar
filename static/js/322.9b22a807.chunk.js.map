{"version":3,"file":"static/js/322.9b22a807.chunk.js","mappings":"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","sources":["pages/CalendarPage/components/CalendarWrapper/CalendarWrapper.styled.ts","pages/CalendarPage/components/Calendar/Calendar.styled.ts","components/Month/Month.styled.ts","components/Day/Day.styled.ts","../node_modules/date-fns/esm/startOfDay/index.js","components/Day/Day.tsx","../node_modules/date-fns/esm/isSameDay/index.js","config/days.ts","../node_modules/date-fns/esm/eachDayOfInterval/index.js","components/Month/Month.tsx","pages/CalendarPage/components/Calendar/Calendar.tsx","../node_modules/date-fns/esm/startOfMonth/index.js","pages/CalendarPage/components/CalendarWrapper/CalendarWrapper.tsx","pages/CalendarPage/CalendarPage.tsx"],"sourcesContent":["export const styles = {\r\n  calendarWrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"20px\",\r\n    width: \"100%\",\r\n    pt: {\r\n      xs: \"30px\",\r\n      md: \"50px\",\r\n    },\r\n    height: \"100%\",\r\n  },\r\n  calendarContent: {\r\n    p: \"0 20px\",\r\n  },\r\n  calendarTitle: {\r\n    width: \"70%\",\r\n    textAlign: \"center\",\r\n    m: \"0 auto\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  calendarblue: {\r\n    color: \"color.yellow\",\r\n    fontSize: \"3rem\",\r\n    lineHeight: \"1.3\",\r\n  },\r\n};\r\n","export const styles = {\r\n  calendarContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    maxWidth: \"100%\",\r\n    p: {\r\n      xs: \"0px\",\r\n      lg: \"0 20px\",\r\n    },\r\n    \"& .slick-slider\": {\r\n      \"& .slick-arrow\": {\r\n        display: \"none !important\",\r\n      },\r\n      \"& .slick-list\": {\r\n        width: {\r\n          xs: \"100vw\",\r\n          lg: \"70vw\",\r\n        },\r\n        overflow: \"hidden\",\r\n        margin: \"0 auto\",\r\n        p: \"0px\",\r\n      },\r\n      \"& .slick-slide\": {\r\n        width: \"100%\",\r\n        justifyContent: \"center\",\r\n      },\r\n    },\r\n  },\r\n  calendarButtons: {\r\n    display: {\r\n      xs: \"flex\",\r\n      lg: \"none\",\r\n    },\r\n    justifyContent: \"center\",\r\n    gap: \"20px\",\r\n    m: \"30px\",\r\n  },\r\n  calendarPrev: {\r\n    display: {\r\n      xs: \"none\",\r\n      lg: \"flex\",\r\n    },\r\n    bgcolor: \"color.blueLight\",\r\n    borderRadius: \"50px\",\r\n    width: \"50px\",\r\n    height: \"50px\",\r\n    minWidth: \"0px\",\r\n  },\r\n  calendarNext: {\r\n    display: {\r\n      xs: \"none\",\r\n      lg: \"flex\",\r\n    },\r\n    bgcolor: \"color.blueLight\",\r\n    borderRadius: \"50px\",\r\n    width: \"50px\",\r\n    height: \"50px\",\r\n    minWidth: \"0px\",\r\n  },\r\n  calendarPrevMobile: {\r\n    // display: {\r\n    //   xs: \"none\",\r\n    //   lg: \"flex\",\r\n    // },\r\n    bgcolor: \"color.blueLight\",\r\n    borderRadius: \"50px\",\r\n    width: \"50px\",\r\n    height: \"50px\",\r\n    minWidth: \"0px\",\r\n  },\r\n  calendarNextMobile: {\r\n    // display: {\r\n    //   xs: \"none\",\r\n    //   lg: \"flex\",\r\n    // },\r\n    bgcolor: \"color.blueLight\",\r\n    borderRadius: \"50px\",\r\n    width: \"50px\",\r\n    height: \"50px\",\r\n    minWidth: \"0px\",\r\n  },\r\n};\r\n","export const styles = {\n  monthContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"90%\",\n    m: \"0 auto\",\n  },\n  monthTitle: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  monthTitleElement: {\n    fontSize: {\n      xs: \"1.5rem\",\n      md: \"2rem\",\n    },\n    color: \"color.blueDark\",\n  },\n  monthContent: {\n    border: \"1px solid\",\n    borderColor: \"color.green\",\n  },\n  monthWeek: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr\",\n    justifyContent: \"space-between\",\n    bgcolor: \"color.green\",\n    border: \"1px solid\",\n    borderColor: \"color.green\",\n    color: \"text.secondary\",\n  },\n  monthDay: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    maxWidth: \"150px\",\n    height: \"35px\",\n    gap: \"10px\",\n  },\n  monthWrapper: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr\",\n    gridTemplateRows: \"1fr 1fr 1fr 1fr 1fr 1fr\",\n  },\n  monthTable: {\n    border: \"1px solid\",\n    borderColor: \"color.green\",\n  },\n  monthEmptyCell: {\n    display: \"flex\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    maxWidth: \"150px\",\n    minWidth: \"10px\",\n    height: {\n      xs: \"50px\",\n      md: \"70px\",\n    },\n    gap: \"10px\",\n    p: \"5px\",\n    borderRadius: \"0px\",\n    border: \"1px solid\",\n    borderColor: \"color.green\",\n    lineHeight: \"1\",\n    color: \"color.disabled\",\n  },\n};\n","export const styles = {\n  dayContainer: {\n    display: \"flex\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    maxWidth: \"150px\",\n    minWidth: \"10px\",\n    height: {\n      xs: \"50px\",\n      md: \"70px\",\n    },\n    gap: \"10px\",\n    p: {\n      xs: \"3px\",\n      sm: \"4px\",\n      md: \"5px\",\n    },\n    borderRadius: \"0px\",\n    border: \"1px solid\",\n    borderColor: \"color.green\",\n    \"& p\": {\n      lineHeight: \"1\",\n      color: \"color.grey\",\n    },\n    \"&:hover\": {\n      bgcolor: \"color.blueLight\",\n    },\n  },\n  dayText: {\n    fontSize: {\n      xs: \"0.7rem\",\n      sm: \"0.8rem\",\n      md: \"1rem\",\n    },\n  },\n  eventIcon: {\n    width: {\n      xs: \"15px\",\n      md: \"25px\",\n    },\n  },\n  eventIconsWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignSelf: \"end\",\n    justifyContent: \"end\",\n    gap: \"5px\",\n    width: \"100%\",\n  },\n  eventCount: {\n    position: \"absolute\",\n    top: 4,\n    right: 4,\n    fontSize: \"0.8rem\",\n    backgroundColor: \"rgba(255, 255, 255, 0.8)\",\n    padding: \"2px 4px\",\n    borderRadius: 4,\n  },\n};\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import React, { FC } from \"react\";\r\nimport { Box, Button, CardMedia, Typography } from \"@mui/material\";\r\nimport { styles } from \"./Day.styled\";\r\nimport { IDayProps } from \"./DayTypes\";\r\nimport { isSameDay } from \"date-fns\";\r\nimport { EditEventState, SpecificDay } from \"store/events/eventsTypes\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport birthday from \"assets/images/png/birthday-cake.png\";\r\nimport { routes } from \"config/routes\";\r\nimport { selectDay } from \"store/events/eventsActions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport months from \"config/months\";\r\n\r\nexport const Day: FC<IDayProps> = ({ date, month, year }) => {\r\n  let day: string;\r\n  date[8] === \"0\" ? (day = date.slice(9)) : (day = date.slice(8));\r\n  const currentDate = new Date();\r\n  const isToday = isSameDay(currentDate, new Date(date));\r\n  const dispatch = useDispatch();\r\n  const allEvents = useSelector(\r\n    (rootReducer: { event: EditEventState }) => rootReducer.event.allEvents,\r\n  );\r\n  let hasBirthday = false;\r\n  const renderEvent = (events: {\r\n    [key: string]: {\r\n      id: string;\r\n      name: string;\r\n      year?: string;\r\n      phone?: string;\r\n      messengers?: string[];\r\n      address?: string;\r\n      socials?: string;\r\n      email?: string;\r\n      textarea?: string;\r\n      photo?: string;\r\n    };\r\n  }) => {\r\n    return Object.entries(events).map(([key, event]) => {\r\n      if (key.startsWith(day + \"_\" + month) && !hasBirthday) {\r\n        hasBirthday = true;\r\n        return (\r\n          <Box key={event.id}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt=\"birthday\"\r\n              image={birthday}\r\n              sx={styles.eventIcon}\r\n            ></CardMedia>\r\n          </Box>\r\n        );\r\n      }\r\n      return null;\r\n    });\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const addSpecificDay = (day: string, month: string, year: string) => {\r\n    const numericMonth =\r\n      months.find((item) => item.title === month)?.month || \"\";\r\n    const updatedDay: SpecificDay = {\r\n      day,\r\n      month,\r\n      year,\r\n    };\r\n    dispatch(selectDay(updatedDay));\r\n    navigate(\r\n      `${routes.home.root}/${routes.home.date.root}/${day}-${numericMonth}`,\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => addSpecificDay(day, month, year)}\r\n        sx={{\r\n          ...styles.dayContainer,\r\n          bgcolor: isToday ? \"color.greenLight\" : \"text.secondary\",\r\n        }}\r\n      >\r\n        <Typography sx={styles.dayText}>{day}</Typography>\r\n        <Box sx={styles.eventIconsWrapper}>\r\n          {allEvents.map((event) => renderEvent(event))}\r\n        </Box>\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n","import startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day (and year and month)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import { format, eachDayOfInterval } from \"date-fns\";\n\nconst currentDate = new Date();\nconst currentYear = currentDate.getFullYear();\n\nconst allDays = eachDayOfInterval({\n  start: new Date(currentYear, 0, 1),\n  end: new Date(currentYear, 11, 31),\n});\n\nconst days = allDays.reduce(\n  (acc: { id: string; date: string }[], day, index) => {\n    acc.push({\n      id: (index + 1).toString(),\n      date: format(day, \"yyyy-MM-dd\"),\n    });\n    return acc;\n  },\n  [],\n);\n\nexport default days;\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  var _options$step;\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = Number((_options$step = options === null || options === void 0 ? void 0 : options.step) !== null && _options$step !== void 0 ? _options$step : 1);\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n  return dates;\n}","import React, { FC } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport { styles } from \"./Month.styled\";\nimport { IMonthProps } from \"./MonthTypes\";\nimport { Day } from \"components/Day\";\nimport days from \"config/days\";\nimport months from \"config/months\";\n\nexport const Month: FC<IMonthProps> = ({ title, year, id }) => {\n  const monthIndex = months.findIndex((month) => month.title === title);\n  const filteredDays = days.filter((day) => {\n    const dayMonth = parseInt(day.date.split(\"-\")[1], 10);\n    return dayMonth === monthIndex + 1;\n  });\n  const firstDayOfMonth = new Date(parseInt(year), monthIndex, 1);\n  const firstDayOfWeek = firstDayOfMonth.getDay();\n  const weekDaysArray = [1, 2, 3, 4, 5, 6, 0];\n\n  const startIndex = weekDaysArray.indexOf(firstDayOfWeek);\n  const previousMonthIndex = monthIndex === 0 ? 11 : monthIndex - 1;\n  const previousMonthDays = days.filter((day) => {\n    const dayMonth = parseInt(day.date.split(\"-\")[1], 10);\n    return dayMonth === previousMonthIndex + 1;\n  });\n  const previousMonthLastDays = previousMonthDays\n    .slice(-startIndex)\n    .map((day) => parseInt(day.date.split(\"-\")[2]));\n\n  const emptyCells = Array.from({ length: startIndex }, (_, index) => (\n    <Box sx={styles.monthEmptyCell} key={`${index}start`}>\n      {previousMonthLastDays[index]}\n    </Box>\n  ));\n\n  const endIndex = 42 - (startIndex + filteredDays.length);\n  const emptyCellsEnd = Array(endIndex)\n    .fill(null)\n    .map((_, index) => {\n      const nextMonthIndex = monthIndex === 11 ? 0 : monthIndex + 1;\n      const nextMonthDays = days.filter((day) => {\n        const dayMonth = parseInt(day.date.split(\"-\")[1], 10);\n        return dayMonth === nextMonthIndex + 1;\n      });\n      const nextMonthFirstDays = nextMonthDays\n        .slice(0, 31)\n        .map((day) => parseInt(day.date.split(\"-\")[2]));\n      return (\n        <Box sx={styles.monthEmptyCell} key={`${index}end`}>\n          {nextMonthFirstDays[index]}\n        </Box>\n      );\n    });\n\n  return (\n    <Box sx={styles.monthContainer}>\n      <Box sx={styles.monthTitle}>\n        <Typography sx={styles.monthTitleElement}>{id}</Typography>\n        <Typography sx={styles.monthTitleElement}>{title}</Typography>\n        <Typography sx={styles.monthTitleElement}>{year}</Typography>\n      </Box>\n      <Box sx={styles.monthContent}>\n        <Box sx={styles.monthWeek}>\n          <Box sx={styles.monthDay}>пн</Box>\n          <Box sx={styles.monthDay}>вт</Box>\n          <Box sx={styles.monthDay}>ср</Box>\n          <Box sx={styles.monthDay}>чт</Box>\n          <Box sx={styles.monthDay}>пт</Box>\n          <Box sx={styles.monthDay}>сб</Box>\n          <Box sx={styles.monthDay}>вс</Box>\n        </Box>\n        <Box sx={styles.monthWrapper}>\n          {emptyCells\n            .concat(\n              filteredDays.map((day) => (\n                <Day key={day.id} date={day.date} month={title} year={year} />\n              )),\n            )\n            .concat(emptyCellsEnd)}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n","import React, { FC, useRef, useState } from \"react\";\r\nimport { Box, Button, useMediaQuery } from \"@mui/material\";\r\nimport { styles } from \"./Calendar.styled\";\r\nimport { Month } from \"components/Month/Month\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { format, startOfMonth } from \"date-fns\";\r\nimport prev from \"assets/images/png/prev.png\";\r\nimport next from \"assets/images/png/next.png\";\r\nimport months from \"config/months\";\r\n\r\nexport const Calendar: FC = () => {\r\n  const monthItems = months;\r\n  const currentMonth = startOfMonth(new Date());\r\n  const sliderRef = useRef<Slider>(null);\r\n  const isDesktop = useMediaQuery(\"(min-width: 1024px)\");\r\n\r\n  const settings = {\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    touchThreshold: 500,\r\n    initialSlide: monthItems.findIndex(\r\n      (month) => month.month === format(currentMonth, \"MM\"),\r\n    ),\r\n    swipeToSlide: true,\r\n    infinite: false,\r\n  };\r\n\r\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(\r\n    settings.initialSlide,\r\n  );\r\n\r\n  const nextSlide = () => {\r\n    const newIndex = Math.min(currentSlideIndex + 1, monthItems.length - 1);\r\n    setCurrentSlideIndex(newIndex);\r\n    if (sliderRef.current) {\r\n      sliderRef.current.slickGoTo(newIndex);\r\n    }\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    const newIndex = Math.max(currentSlideIndex - 1, 0);\r\n    setCurrentSlideIndex(newIndex);\r\n    if (sliderRef.current) {\r\n      sliderRef.current.slickGoTo(newIndex);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box sx={styles.calendarContainer}>\r\n        <Button\r\n          sx={{\r\n            ...styles.calendarPrev,\r\n            \"&:before\": {\r\n              width: \"20px\",\r\n              height: \"20px\",\r\n              position: \"absolute\",\r\n              content: '\"\"',\r\n              background: `url(${prev}) no-repeat`,\r\n            },\r\n            \"&:hover\": {\r\n              bgcolor: isDesktop ? \"#0097a7\" : \"#e0f7fa\",\r\n            },\r\n            \"&:disabled\": {\r\n              bgcolor: \"#e0f7fa88\",\r\n              pointerEvents: \"none\",\r\n            },\r\n          }}\r\n          onClick={prevSlide}\r\n        ></Button>\r\n        <Slider ref={sliderRef} {...settings}>\r\n          {monthItems.map((month) => (\r\n            <Month\r\n              key={month.id}\r\n              title={month.title}\r\n              year={month.year}\r\n              id={month.id}\r\n            />\r\n          ))}\r\n        </Slider>\r\n        <Button\r\n          sx={{\r\n            ...styles.calendarNext,\r\n            \"&:before\": {\r\n              width: \"20px\",\r\n              height: \"20px\",\r\n              position: \"absolute\",\r\n              content: '\"\"',\r\n              background: `url(${next}) no-repeat`,\r\n            },\r\n            \"&:hover\": {\r\n              bgcolor: isDesktop ? \"#0097a7\" : \"#e0f7fa\",\r\n            },\r\n            \"&:disabled\": {\r\n              bgcolor: \"#e0f7fa88\",\r\n              pointerEvents: \"none\",\r\n            },\r\n          }}\r\n          onClick={nextSlide}\r\n        ></Button>\r\n      </Box>\r\n      <Box sx={styles.calendarButtons}>\r\n        <Button\r\n          sx={{\r\n            ...styles.calendarPrevMobile,\r\n            \"&:before\": {\r\n              width: \"20px\",\r\n              height: \"20px\",\r\n              position: \"absolute\",\r\n              content: '\"\"',\r\n              background: `url(${prev}) no-repeat`,\r\n            },\r\n            \"&:hover\": {\r\n              bgcolor: isDesktop ? \"#0097a7\" : \"#e0f7fa\",\r\n            },\r\n            \"&:disabled\": {\r\n              bgcolor: \"#e0f7fa88\",\r\n              pointerEvents: \"none\",\r\n            },\r\n          }}\r\n          onClick={prevSlide}\r\n        ></Button>\r\n        <Button\r\n          sx={{\r\n            ...styles.calendarNextMobile,\r\n            \"&:before\": {\r\n              width: \"20px\",\r\n              height: \"20px\",\r\n              position: \"absolute\",\r\n              content: '\"\"',\r\n              background: `url(${next}) no-repeat`,\r\n            },\r\n            \"&:hover\": {\r\n              bgcolor: isDesktop ? \"#0097a7\" : \"#e0f7fa\",\r\n            },\r\n            \"&:disabled\": {\r\n              bgcolor: \"#e0f7fa88\",\r\n              pointerEvents: \"none\",\r\n            },\r\n          }}\r\n          onClick={nextSlide}\r\n        ></Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import React, { FC } from \"react\";\r\nimport { Box, Typography, useMediaQuery } from \"@mui/material\";\r\nimport { styles } from \"./CalendarWrapper.styled\";\r\nimport { Calendar } from \"../Calendar/Calendar\";\r\n\r\nexport const CalendarWrapper: FC = () => {\r\n  const isDesktop = useMediaQuery(\"(min-width: 1024px)\");\r\n  return (\r\n    <Box sx={styles.calendarWrapper}>\r\n      {/* {isDesktop && (\r\n        <Box sx={styles.calendarContent}>\r\n          <Typography sx={styles.calendarTitle}>\r\n            Дни рождения родных и близких, свадьбы, семейные праздники - все\r\n            важные даты теперь будут сохранены. Просто выбирайте дни календаря и\r\n            отмечайте события, чтобы не забыть подготовиться и придумать\r\n            поздравление.\r\n          </Typography>\r\n        </Box>\r\n      )} */}\r\n      <Calendar />\r\n    </Box>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { CalendarWrapper } from \"./components/CalendarWrapper\";\r\n\r\nconst CalendarPage = () => {\r\n  return (\r\n    <>\r\n      <CalendarWrapper />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CalendarPage;\r\n"],"names":["styles","calendarWrapper","display","flexDirection","gap","width","pt","xs","md","height","calendarContent","p","calendarTitle","textAlign","m","fontSize","calendarblue","color","lineHeight","calendarContainer","justifyContent","alignItems","maxWidth","lg","overflow","margin","calendarButtons","calendarPrev","bgcolor","borderRadius","minWidth","calendarNext","calendarPrevMobile","calendarNextMobile","monthContainer","monthTitle","monthTitleElement","monthContent","border","borderColor","monthWeek","gridTemplateColumns","monthDay","monthWrapper","gridTemplateRows","monthTable","monthEmptyCell","dayContainer","sm","dayText","eventIcon","eventIconsWrapper","flexWrap","alignSelf","eventCount","position","top","right","backgroundColor","padding","startOfDay","dirtyDate","requiredArgs","arguments","date","toDate","setHours","Day","_ref","day","month","year","slice","isToday","dirtyDateLeft","dirtyDateRight","dateLeftStartOfDay","dateRightStartOfDay","getTime","isSameDay","Date","dispatch","useDispatch","allEvents","useSelector","rootReducer","event","hasBirthday","navigate","useNavigate","_jsx","_Fragment","children","_jsxs","Button","onClick","_months$find","numericMonth","months","find","item","title","updatedDay","selectDay","concat","routes","home","root","addSpecificDay","sx","_objectSpread","Typography","Box","map","events","Object","entries","_ref2","_ref3","_slicedToArray","key","startsWith","CardMedia","component","alt","image","id","currentYear","getFullYear","allDays","dirtyInterval","options","_options$step","interval","startDate","start","endTime","end","RangeError","dates","currentDate","step","Number","isNaN","push","setDate","getDate","eachDayOfInterval","reduce","acc","index","toString","format","Month","monthIndex","findIndex","filteredDays","days","filter","parseInt","split","firstDayOfWeek","getDay","startIndex","indexOf","previousMonthIndex","previousMonthLastDays","emptyCells","Array","from","length","_","endIndex","emptyCellsEnd","fill","nextMonthIndex","nextMonthFirstDays","Calendar","monthItems","currentMonth","startOfMonth","sliderRef","useRef","isDesktop","useMediaQuery","settings","slidesToShow","slidesToScroll","touchThreshold","initialSlide","swipeToSlide","infinite","_useState","useState","_useState2","currentSlideIndex","setCurrentSlideIndex","nextSlide","newIndex","Math","min","current","slickGoTo","prevSlide","max","content","background","prev","pointerEvents","Slider","ref","next","CalendarWrapper"],"sourceRoot":""}